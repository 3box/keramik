---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: ceramic
  namespace: default
  labels:
    app: ceramic
spec:
  podManagementPolicy: Parallel
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 50%
  replicas: 10
  serviceName: ceramic
  selector:
    matchLabels:
      app: ceramic
  template:
    metadata:
      labels:
        app: ceramic
      annotations:
        prometheus/path: "/metrics"
    spec:
      initContainers:
        - name: init-ceramic-config
          image: 3boxben/composedb
          resources:
            limits:
              cpu: 250m
              ephemeral-storage: 1Gi
              memory: 512Mi
            requests:
              cpu: 250m
              ephemeral-storage: 1Gi
              memory: 512Mi
          command:
            - "/bin/bash"
            - "-c"
            - "/ceramic-init/ceramic-init.sh"
          volumeMounts:
            - name: config-volume
              mountPath: /config
            - name: ceramic-init
              mountPath: /ceramic-init

          envFrom:
            - configMapRef:
                name: ceramic-env
          env:
            - name: CERAMIC_ADMIN_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: ceramic-admin
                  key: private-key
      containers:
        - name: ceramic
          image: 3boxben/composedb
          command:
            - "/js-ceramic/packages/cli/bin/ceramic.js"
            - "daemon"
            - "--config"
            - "/config/daemon-config.json"
            - "--anchor-service-api"
            - "http://cas:8081"
            - "--ethereum-rpc"
            - "http://ganache:8545"
          resources:
            limits:
              cpu: 250m
              ephemeral-storage: 1Gi
              memory: 512Mi
            requests:
              cpu: 250m
              ephemeral-storage: 1Gi
              memory: 512Mi
          env:
            - name: CERAMIC_STATE_STORE_PATH
              value: "/ceramic-data"
          envFrom:
            - configMapRef:
                name: ceramic-env
          ports:
            - containerPort: 7007
          readinessProbe:
            httpGet:
              path: /api/v0/node/healthcheck
              port: 7007
            initialDelaySeconds: 60
            periodSeconds: 15
          volumeMounts:
            - name: config-volume
              mountPath: /config
            - name: ceramic-data
              mountPath: /ceramic-data
        - name: ipfs
          image: ipfs/ipfs
          imagePullPolicy: IfNotPresent
          env:
            - name: RUST_LOG
              value: info,ceramic_one=debug,tracing_actix_web=debug
            - name: CERAMIC_ONE_BIND_ADDRESS
              value: "0.0.0.0:5001"
            - name: CERAMIC_ONE_METRICS
              value: "true"
            - name: CERAMIC_ONE_METRICS_BIND_ADDRESS
              value: "0.0.0.0:9090"
              # TODO Figure out how to use quic
              #   * `quic-v1` causes js-ceramic to error
              #   * `quic` causes rust-ceramic to deadlock on startup
            - name: CERAMIC_ONE_SWARM_ADDRESSES
              value: "/ip4/0.0.0.0/tcp/4001"
            - name: CERAMIC_ONE_STORE_DIR
              value: "/data/ipfs"
          resources:
            requests:
              cpu: 250m
              ephemeral-storage: 1Gi
              memory: 512Mi
            limits:
              cpu: 250m
              ephemeral-storage: 1Gi
              memory: 512Mi
          ports:
            - containerPort: 4001
              name: swarm-tcp
              protocol: TCP
            - containerPort: 4002
              name: swarm-quic
              protocol: UDP
            - containerPort: 5001
              name: api
              protocol: TCP
            - containerPort: 9090
              name: metrics
              protocol: TCP
          volumeMounts:
            - name: ipfs-data
              mountPath: /data/ipfs
      volumes:
        - name: config-volume
          emptyDir: {}
        - name: ceramic-init
          configMap:
            name: ceramic-init
            defaultMode: 0755
        - name: ceramic-data
          persistentVolumeClaim:
            claimName: ceramic-data
        - name: ipfs-data
          persistentVolumeClaim:
            claimName: ipfs-data
  volumeClaimTemplates:
    - metadata:
        name: ceramic-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Gi
    - metadata:
        name: ipfs-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: ceramic
  namespace: default
  labels:
    app: ceramic
spec:
  ports:
    - port: 7007
      targetPort: 7007
      protocol: TCP
      name: ceramic
    - port: 5001
      targetPort: 5001
      protocol: TCP
      name: rpc
    - port: 4001
      targetPort: 4001
      protocol: TCP
      name: swarm-tcp
    - port: 4002
      targetPort: 4002
      protocol: UDP
      name: swarm-quic
  selector:
    app: ceramic
  type: ClusterIP
