Request {
    method: "PATCH",
    uri: "/apis/apps/v1/namespaces/keramik-test/statefulsets/ceramic?&fieldManager=keramik",
    headers: {
        "accept": "application/json",
        "content-type": "application/apply-patch+yaml",
    },
    body: {
      "apiVersion": "apps/v1",
      "kind": "StatefulSet",
      "metadata": {
        "labels": {
          "managed-by": "keramik"
        },
        "name": "ceramic"
      },
      "spec": {
        "podManagementPolicy": "Parallel",
        "replicas": 0,
        "selector": {
          "matchLabels": {
            "app": "ceramic"
          }
        },
        "serviceName": "ceramic",
        "template": {
          "metadata": {
            "annotations": {
              "prometheus/path": "/metrics"
            },
            "labels": {
              "app": "ceramic",
              "managed-by": "keramik"
            }
          },
          "spec": {
            "containers": [
              {
                "command": [
                  "/js-ceramic/packages/cli/bin/ceramic.js",
                  "daemon",
                  "--config",
                  "/config/daemon-config.json",
                  "--anchor-service-api",
                  "http://cas:8081",
                  "--ethereum-rpc",
                  "http://ganache:8545"
                ],
                "env": [
                  {
                    "name": "CERAMIC_NETWORK",
                    "value": "local"
                  },
                  {
                    "name": "CERAMIC_NETWORK_TOPIC",
                    "value": "/ceramic/local-keramik"
                  },
                  {
                    "name": "CERAMIC_SQLITE_PATH",
                    "value": "/ceramic-data/ceramic.db"
                  },
                  {
                    "name": "CERAMIC_STATE_STORE_PATH",
                    "value": "/ceramic-data/statestore"
                  },
                  {
                    "name": "CERAMIC_IPFS_HOST",
                    "value": "http://localhost:5001"
                  },
                  {
                    "name": "CERAMIC_CORS_ALLOWED_ORIGINS",
                    "value": ".*"
                  },
                  {
                    "name": "CERAMIC_LOG_LEVEL",
                    "value": "2"
                  }
                ],
                "image": "3boxben/composedb:latest",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "httpGet": {
                    "path": "/api/v0/node/healthcheck",
                    "port": "api"
                  },
                  "initialDelaySeconds": 30,
                  "periodSeconds": 15
                },
                "name": "ceramic",
                "ports": [
                  {
                    "containerPort": 7007,
                    "name": "api"
                  }
                ],
                "readinessProbe": {
                  "httpGet": {
                    "path": "/api/v0/node/healthcheck",
                    "port": "api"
                  },
                  "initialDelaySeconds": 30,
                  "periodSeconds": 15
                },
                "resources": {
                  "limits": {
                    "cpu": "250m",
                    "ephemeral-storage": "1Gi",
                    "memory": "512Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "ephemeral-storage": "1Gi",
                    "memory": "512Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "mountPath": "/config",
                    "name": "config-volume"
                  },
                  {
                    "mountPath": "/ceramic-data",
                    "name": "ceramic-data"
                  }
                ]
              },
              {
                "env": [
                  {
                    "name": "RUST_LOG",
                    "value": "info,ceramic_one=debug,tracing_actix_web=debug"
                  },
                  {
                    "name": "CERAMIC_ONE_BIND_ADDRESS",
                    "value": "0.0.0.0:5001"
                  },
                  {
                    "name": "CERAMIC_ONE_METRICS",
                    "value": "true"
                  },
                  {
                    "name": "CERAMIC_ONE_METRICS_BIND_ADDRESS",
                    "value": "0.0.0.0:9090"
                  },
                  {
                    "name": "CERAMIC_ONE_SWARM_ADDRESSES",
                    "value": "/ip4/0.0.0.0/tcp/4001"
                  },
                  {
                    "name": "CERAMIC_ONE_STORE_DIR",
                    "value": "/data/ipfs"
                  }
                ],
                "image": "public.ecr.aws/r5b3e0r5/3box/ceramic-one:latest",
                "imagePullPolicy": "Always",
                "name": "ipfs",
                "ports": [
                  {
                    "containerPort": 4001,
                    "name": "swarm-tcp",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 5001,
                    "name": "rpc",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 9090,
                    "name": "metrics",
                    "protocol": "TCP"
                  }
                ],
                "resources": {
                  "limits": {
                    "cpu": "250m",
                    "ephemeral-storage": "1Gi",
                    "memory": "512Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "ephemeral-storage": "1Gi",
                    "memory": "512Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "mountPath": "/data/ipfs",
                    "name": "ipfs-data"
                  }
                ]
              }
            ],
            "initContainers": [
              {
                "command": [
                  "/bin/bash",
                  "-c",
                  "/ceramic-init/ceramic-init.sh"
                ],
                "env": [
                  {
                    "name": "CERAMIC_ADMIN_PRIVATE_KEY",
                    "valueFrom": {
                      "secretKeyRef": {
                        "key": "private-key",
                        "name": "ceramic-admin"
                      }
                    }
                  },
                  {
                    "name": "CERAMIC_NETWORK",
                    "value": "local"
                  },
                  {
                    "name": "CERAMIC_NETWORK_TOPIC",
                    "value": "/ceramic/local-keramik"
                  },
                  {
                    "name": "CERAMIC_SQLITE_PATH",
                    "value": "/ceramic-data/ceramic.db"
                  },
                  {
                    "name": "CERAMIC_STATE_STORE_PATH",
                    "value": "/ceramic-data/statestore"
                  },
                  {
                    "name": "CERAMIC_IPFS_HOST",
                    "value": "http://localhost:5001"
                  },
                  {
                    "name": "CERAMIC_CORS_ALLOWED_ORIGINS",
                    "value": ".*"
                  },
                  {
                    "name": "CERAMIC_LOG_LEVEL",
                    "value": "2"
                  }
                ],
                "image": "3boxben/composedb:latest",
                "imagePullPolicy": "Always",
                "name": "init-ceramic-config",
                "resources": {
                  "limits": {
                    "cpu": "250m",
                    "ephemeral-storage": "1Gi",
                    "memory": "512Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "ephemeral-storage": "1Gi",
                    "memory": "512Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "mountPath": "/config",
                    "name": "config-volume"
                  },
                  {
                    "mountPath": "/ceramic-init",
                    "name": "ceramic-init"
                  }
                ]
              }
            ],
            "volumes": [
              {
                "emptyDir": {},
                "name": "config-volume"
              },
              {
                "configMap": {
                  "defaultMode": 493,
                  "name": "ceramic-init"
                },
                "name": "ceramic-init"
              },
              {
                "name": "ceramic-data",
                "persistentVolumeClaim": {
                  "claimName": "ceramic-data"
                }
              },
              {
                "name": "ipfs-data",
                "persistentVolumeClaim": {
                  "claimName": "ipfs-data"
                }
              }
            ]
          }
        },
        "updateStrategy": {
          "rollingUpdate": {
            "maxUnavailable": "50%"
          }
        },
        "volumeClaimTemplates": [
          {
            "apiVersion": "v1",
            "kind": "PersistentVolumeClaim",
            "metadata": {
              "name": "ceramic-data"
            },
            "spec": {
              "accessModes": [
                "ReadWriteOnce"
              ],
              "resources": {
                "requests": {
                  "storage": "10Gi"
                }
              }
            }
          },
          {
            "apiVersion": "v1",
            "kind": "PersistentVolumeClaim",
            "metadata": {
              "name": "ipfs-data"
            },
            "spec": {
              "accessModes": [
                "ReadWriteOnce"
              ],
              "resources": {
                "requests": {
                  "storage": "10Gi"
                }
              }
            }
          }
        ]
      }
    },
}
